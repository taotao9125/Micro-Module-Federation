import{_ as s,c as n,o as a,a as t}from"./app.12555581.js";const A=JSON.parse('{"title":"\u751F\u547D\u5468\u671F","description":"","frontmatter":{},"headers":[],"relativePath":"guide/lifecycle.md","lastUpdated":1665728802000}'),o={name:"guide/lifecycle.md"},p=t(`<h1 id="\u751F\u547D\u5468\u671F" tabindex="-1">\u751F\u547D\u5468\u671F <a class="header-anchor" href="#\u751F\u547D\u5468\u671F" aria-hidden="true">#</a></h1><p><code>Micro Module Federation</code> \u63D0\u4F9B\u4E86 4 \u4E2A\u751F\u547D\u5468\u671F</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">zmf-app</span><span style="color:#89DDFF;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EntryApp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">module</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app2/EntryApp</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">beforeMount</span><span style="color:#89DDFF;">={()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">onMount</span><span style="color:#89DDFF;">={()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    onUnmount</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">() =&gt; {</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">onError</span><span style="color:#89DDFF;">={()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}}</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre></div><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td>beforeMount</td><td>\u5F53\u8FDC\u7A0B\u6A21\u5757\u6302\u8F7D\u5230 DOM \u524D\u6267\u884C</td><td>function(instanceId)</td><td>-</td></tr><tr><td>onMount</td><td>\u5F53\u8FDC\u7A0B\u6A21\u5757\u6302\u8F7D\u5230 DOM \u540E\u6267\u884C</td><td>function(instanceId)</td><td>-</td></tr><tr><td>onUnmount</td><td>\u5F53\u8FDC\u7A0B\u6A21\u5757\u5378\u8F7D\u540E\u6267\u884C</td><td>function(instanceId)</td><td>-</td></tr><tr><td>onError</td><td>\u5F53\u8FDC\u7A0B\u6A21\u5757\u6267\u884C\u51FA\u65F6\u6267\u884C</td><td>function(error, instanceId)</td><td>-</td></tr></tbody></table>`,4),l=[p];function e(c,r,d,D,y,F){return a(),n("div",null,l)}const C=s(o,[["render",e]]);export{A as __pageData,C as default};
